a customer store credit application that could do the following:

- Add a new customer, with details like phone number, first name, last name, email address.
- Delete a customer.
- Edit customer details.
- Add store credit against the customer.
- Remove store credit if the customer wants to use the credit to make a purchase.
- Show the total amount of credit for a given customer.
- Assign a dollar value per credit.
- Maybe have different categories for the type of store credit. e.g. general credit or credits towards shirt purchases only.


Testing:
Manual testing requires a spreadsheet where in each row you give a decription of what you're testing (what kind of test, who is testing, the input the test is receiving, the expected output, the output you are actually getting, The test is/isn't passing) You can create a spreadsheet of your own or use a template

Style:
Big things to remember are:

- snake_case for functions and variables
- PascalCase for classes
- ALL_CAPS for constant variables
- _leading_underscore() for private methods
- four spaces for indenting (which in VSCode can be applied with the tab key)
- avoid extremely long lines (I am sometimes guilty of this one too)
- use quotation marks consistently 
But yeah, the PEP8 guide is very close to what I've been demonstrating in class so far - it's what I apply when I write production code.

It would definitely be beneficial to read through that guide to acquaint yourself with what the markers will be looking for, but if you take a look back through the code I've posted in the code channel, I think it should conform almost exactly to PEP8. The main difference that I notice is that I generally say 

if not element in list:
  pass


whereas PEP8 calls for 

if element not in list:
  pass
